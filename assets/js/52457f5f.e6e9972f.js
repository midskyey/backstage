/*! For license information please see 52457f5f.e6e9972f.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[11261],{682648:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(474848),i=t(28453);const s={id:"plugin-scaffolder-backend-module-github.createpublishgithubaction",title:"createPublishGithubAction()",description:"API reference for createPublishGithubAction()"},o=void 0,a={id:"reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",title:"createPublishGithubAction()",description:"API reference for createPublishGithubAction()",source:"@site/../docs/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction.md",sourceDirName:"reference",slug:"/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",permalink:"/docs/next/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction.md",tags:[],version:"current",frontMatter:{id:"plugin-scaffolder-backend-module-github.createpublishgithubaction",title:"createPublishGithubAction()",description:"API reference for createPublishGithubAction()"}},c={},l=[{value:"Parameters",id:"parameters",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/next/reference/",children:"Home"})," > ",(0,r.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-backend-module-github",children:(0,r.jsx)(n.code,{children:"@backstage/plugin-scaffolder-backend-module-github"})})," > ",(0,r.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",children:(0,r.jsx)(n.code,{children:"createPublishGithubAction"})})]}),"\n",(0,r.jsx)(n.p,{children:"Creates a new action that initializes a git repository of the content in the workspace and publishes it to GitHub."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'function createPublishGithubAction(options: {\n    integrations: ScmIntegrationRegistry;\n    config: Config;\n    githubCredentialsProvider?: GithubCredentialsProvider;\n}): import("@backstage/plugin-scaffolder-node").TemplateAction<{\n    repoUrl: string;\n    description?: string;\n    homepage?: string;\n    access?: string;\n    defaultBranch?: string;\n    protectDefaultBranch?: boolean;\n    protectEnforceAdmins?: boolean;\n    deleteBranchOnMerge?: boolean;\n    gitCommitMessage?: string;\n    gitAuthorName?: string;\n    gitAuthorEmail?: string;\n    allowRebaseMerge?: boolean;\n    allowSquashMerge?: boolean;\n    squashMergeCommitTitle?: "PR_TITLE" | "COMMIT_OR_PR_TITLE";\n    squashMergeCommitMessage?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK";\n    allowMergeCommit?: boolean;\n    allowAutoMerge?: boolean;\n    allowUpdateBranch?: boolean;\n    sourcePath?: string;\n    bypassPullRequestAllowances?: {\n        users?: string[];\n        teams?: string[];\n        apps?: string[];\n    } | undefined;\n    requiredApprovingReviewCount?: number;\n    restrictions?: {\n        users: string[];\n        teams: string[];\n        apps?: string[];\n    } | undefined;\n    requireCodeOwnerReviews?: boolean;\n    dismissStaleReviews?: boolean;\n    requiredStatusCheckContexts?: string[];\n    requireBranchesToBeUpToDate?: boolean;\n    requiredConversationResolution?: boolean;\n    requireLastPushApproval?: boolean;\n    repoVisibility?: "private" | "internal" | "public";\n    collaborators?: Array<{\n        user: string;\n        access: string;\n    } | {\n        team: string;\n        access: string;\n    } | {\n        username: string;\n        access: "pull" | "push" | "admin" | "maintain" | "triage";\n    }>;\n    hasProjects?: boolean | undefined;\n    hasWiki?: boolean | undefined;\n    hasIssues?: boolean | undefined;\n    token?: string;\n    topics?: string[];\n    repoVariables?: {\n        [key: string]: string;\n    };\n    secrets?: {\n        [key: string]: string;\n    };\n    oidcCustomization?: {\n        useDefault: boolean;\n        includeClaimKeys?: string[];\n    };\n    requiredCommitSigning?: boolean;\n    requiredLinearHistory?: boolean;\n    customProperties?: {\n        [key: string]: string;\n    };\n    subscribe?: boolean;\n}, import("@backstage/types").JsonObject, "v1">;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Parameter"}),"\n"]}),(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Type"}),"\n"]}),(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Description"}),"\n"]})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["\n",(0,r.jsx)(n.p,{children:"options"}),"\n"]}),(0,r.jsxs)(n.td,{children:["\n",(0,r.jsxs)(n.p,{children:["{ integrations: ",(0,r.jsx)(n.a,{href:"/docs/next/reference/integration.scmintegrationregistry",children:"ScmIntegrationRegistry"}),"; config: ",(0,r.jsx)(n.a,{href:"/docs/next/reference/config.config",children:"Config"}),"; githubCredentialsProvider?: ",(0,r.jsx)(n.a,{href:"/docs/next/reference/integration.githubcredentialsprovider",children:"GithubCredentialsProvider"}),"; }"]}),"\n"]}),(0,r.jsx)(n.td,{children:"\n"})]})})]}),"\n**Returns:**\n",(0,r.jsxs)(n.p,{children:['import("@backstage/plugin-scaffolder-node").',(0,r.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-node.templateaction",children:"TemplateAction"}),'<{ repoUrl: string; description?: string; homepage?: string; access?: string; defaultBranch?: string; protectDefaultBranch?: boolean; protectEnforceAdmins?: boolean; deleteBranchOnMerge?: boolean; gitCommitMessage?: string; gitAuthorName?: string; gitAuthorEmail?: string; allowRebaseMerge?: boolean; allowSquashMerge?: boolean; squashMergeCommitTitle?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"; squashMergeCommitMessage?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"; allowMergeCommit?: boolean; allowAutoMerge?: boolean; allowUpdateBranch?: boolean; sourcePath?: string; bypassPullRequestAllowances?: { users?: string[]; teams?: string[]; apps?: string[]; } | undefined; requiredApprovingReviewCount?: number; restrictions?: { users: string[]; teams: string[]; apps?: string[]; } | undefined; requireCodeOwnerReviews?: boolean; dismissStaleReviews?: boolean; requiredStatusCheckContexts?: string[]; requireBranchesToBeUpToDate?: boolean; requiredConversationResolution?: boolean; requireLastPushApproval?: boolean; repoVisibility?: "private" | "internal" | "public"; collaborators?: Array<{ user: string; access: string; } | { team: string; access: string; } | { username: string; access: "pull" | "push" | "admin" | "maintain" | "triage"; }>; hasProjects?: boolean | undefined; hasWiki?: boolean | undefined; hasIssues?: boolean | undefined; token?: string; topics?: string[]; repoVariables?: { [key: string]: string; }; secrets?: { [key: string]: string; }; oidcCustomization?: { useDefault: boolean; includeClaimKeys?: string[]; }; requiredCommitSigning?: boolean; requiredLinearHistory?: boolean; customProperties?: { [key: string]: string; }; subscribe?: boolean; }, import("@backstage/types").',(0,r.jsx)(n.a,{href:"/docs/next/reference/types.jsonobject",children:"JsonObject"}),', "v1">']})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},221020:(e,n,t)=>{var r=t(296540),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var r,s={},l=null,u=null;for(r in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(u=n.ref),n)o.call(n,r)&&!c.hasOwnProperty(r)&&(s[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===s[r]&&(s[r]=n[r]);return{$$typeof:i,type:e,key:l,ref:u,props:s,_owner:a.current}}n.Fragment=s,n.jsx=l,n.jsxs=l},474848:(e,n,t)=>{e.exports=t(221020)},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(296540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);