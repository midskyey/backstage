/*! For license information please see a0ecbaf5.24af5169.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[314940],{46838:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=t(474848),i=t(28453);const s={id:"debugging",title:"Debugging Backstage",description:"How logging works and how to configure it"},a=void 0,c={id:"tooling/local-dev/debugging",title:"Debugging Backstage",description:"How logging works and how to configure it",source:"@site/../docs/tooling/local-dev/debugging.md",sourceDirName:"tooling/local-dev",slug:"/tooling/local-dev/debugging",permalink:"/docs/next/tooling/local-dev/debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/tooling/local-dev/debugging.md",tags:[],version:"current",frontMatter:{id:"debugging",title:"Debugging Backstage",description:"How logging works and how to configure it"},sidebar:"docs",previous:{title:"Linking in Local Packages",permalink:"/docs/next/tooling/local-dev/linking-local-packages"},next:{title:"Profiling Backstage",permalink:"/docs/next/tooling/local-dev/profiling"}},r={},l=[{value:"Debugger",id:"debugger",level:2},{value:"VSCode",id:"vscode",level:3},{value:"WebStorm",id:"webstorm",level:3}];function g(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"When configuring Backstage for the first time locally, or contributing new code changes,\nit can be helpful to change the logging levels to better understand how the system is functioning."}),"\n",(0,o.jsxs)(n.p,{children:["Backstage uses the ",(0,o.jsx)(n.a,{href:"https://github.com/winstonjs/winston",children:"Winston logging library"})," and supports\n",(0,o.jsxs)(n.a,{href:"https://github.com/winstonjs/winston#logging-levels",children:["the ",(0,o.jsx)(n.code,{children:"npm"})," logging levels"]})," such as\n",(0,o.jsx)(n.code,{children:"warn"}),", ",(0,o.jsx)(n.code,{children:"info"})," (the default), or ",(0,o.jsx)(n.code,{children:"debug"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"The logging instance is also passed to plugins for them to expose information about\ntheir processing as well."}),"\n",(0,o.jsxs)(n.p,{children:["Changing the level can be done by setting the ",(0,o.jsx)(n.code,{children:"LOG_LEVEL"})," environment variable."]}),"\n",(0,o.jsx)(n.p,{children:"For example, to turn on debug logs when running the app locally, you can run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"LOG_LEVEL=debug yarn start\n"})}),"\n",(0,o.jsx)(n.p,{children:"The resulting log should now have more information available for debugging:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:'[1] 2023-04-12T00:51:42.468Z catalog debug Skipped stitching of domain:default/artists, no changes type=plugin\n[1] 2023-04-12T00:51:42.469Z catalog debug Skipped stitching of domain:default/playback, no changes type=plugin\n[1] 2023-04-12T00:51:42.470Z catalog debug Processing system:default/podcast type=plugin\n[1] 2023-04-12T00:51:42.470Z catalog debug Processing group:default/infrastructure type=plugin\n[1] 2023-04-12T00:51:42.470Z catalog debug Processing group:default/boxoffice type=plugin\n[1] 2023-04-12T00:51:42.470Z catalog debug Processing group:default/backstage type=plugin\n[1] 2023-04-12T00:51:42.470Z catalog debug Processing group:default/team-a type=plugin\n[1] 2023-04-12T00:51:42.519Z catalog debug Skipped stitching of group:default/acme-corp, no changes type=plugin\n[1] 2023-04-12T00:51:42.520Z catalog debug Skipped stitching of group:default/backstage, no changes type=plugin\n[1] 2023-04-12T00:51:42.521Z catalog debug Skipped stitching of group:default/boxoffice, no changes type=plugin\n[1] 2023-04-12T00:51:42.523Z catalog debug Processing user:default/breanna.davison type=plugin\n[1] 2023-04-12T00:51:42.524Z catalog debug Processing user:default/janelle.dawe type=plugin\n[1] 2023-04-12T00:51:42.524Z catalog debug Processing user:default/nigel.manning type=plugin\n[1] 2023-04-12T00:51:42.524Z catalog debug Processing user:default/guest type=plugin\n[1] 2023-04-12T00:51:42.525Z catalog debug Processing group:default/team-b type=plugin\n[1] 2023-04-12T00:51:44.057Z search info Starting collation of explore tools type=plugin\n[1] 2023-04-12T00:51:44.095Z backstage info ::1 - - [12/Apr/2023:00:51:44 +0000] "GET /api/explore/tools HTTP/1.1" 200 - "-" "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)" type=incomingRequest\n[1] 2023-04-12T00:51:44.100Z backstage info ::1 - - [12/Apr/2023:00:51:44 +0000] "GET /api/catalog/entities?filter=metadata.annotations.backstage.io%2Ftechdocs-ref&fields=kind,namespace,metadata.annotations,metadata.name,metadata.title,metadata.namespace,spec.type,spec.lifecycle,relations&offset=0&limit=500 HTTP/1.1" 200 - "-" "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)" type=incomingRequest\n[1] 2023-04-12T00:51:44.104Z search info Finished collation of explore tools type=plugin\n[1] 2023-04-12T00:51:44.118Z search info Collating documents for tools succeeded type=plugin documentType=tools\n[1] 2023-04-12T00:51:44.119Z backstage debug task: search_index_tools will next occur around 2023-04-11T21:01:44.118-04:00 type=taskManager task=search_index_tools\n'})}),"\n",(0,o.jsx)(n.h2,{id:"debugger",children:"Debugger"}),"\n",(0,o.jsx)(n.h3,{id:"vscode",children:"VSCode"}),"\n",(0,o.jsxs)(n.p,{children:["In your ",(0,o.jsx)(n.code,{children:".vscode/launch.json"}),", add a new entry with the following,"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsonc",children:'{\n  "configurations": [\n    {\n      "name": "Start Backstage", // The name of this configuration, displayed in the Run and Debug panel.\n      "type": "node", // Specifies that this is a Node.js debugging configuration.\n      "request": "launch", // Indicates that the debugger should launch the application (as opposed to attaching to an already running process).\n      "cwd": "${workspaceFolder}", // Sets the current working directory to the root of the workspace.\n      "runtimeExecutable": "yarn", // Specifies the runtime to execute the application. In this case, it uses `yarn` to run the script.\n      "args": ["start", "--inspect"], // Arguments passed to the `yarn` command. Here, it runs `yarn start` with the `--inspect` flag to enable debugging.\n      "skipFiles": ["<node_internals>/**"], // Tells the debugger to skip stepping into Node.js internal files during debugging.\n      "console": "integratedTerminal" // Specifies that the debugger should use the integrated terminal for input/output.\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can add multiple configurations for different purposes."}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"https://code.visualstudio.com/docs/debugtest/debugging-configuration",children:"VSCode docs"})," for more information."]}),"\n",(0,o.jsx)(n.h3,{id:"webstorm",children:"WebStorm"}),"\n",(0,o.jsx)(n.p,{children:"This section describes the process for enabling run configurations for Backstage in WebStorm.\nRun configurations enable the use of debugging functionality such as steppers and breakpoints."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Select ",(0,o.jsx)(n.code,{children:"Edit Configurations"})," in the ",(0,o.jsx)(n.code,{children:"Run"})," dropdown menu. Click the plus sign to add a new\nconfiguration, then select ",(0,o.jsx)(n.code,{children:"Node.js"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["In ",(0,o.jsx)(n.code,{children:"Working directory"}),", input ",(0,o.jsx)(n.code,{children:"{PROJECT_DIR}/packages/backend"}),".\nReplace ",(0,o.jsx)(n.code,{children:"{PROJECT_DIR}"})," with the path to your Backstage repo."]}),"\n",(0,o.jsxs)(n.li,{children:["In ",(0,o.jsx)(n.code,{children:"JavaScript file"}),", input ",(0,o.jsx)(n.code,{children:"{PROJECT_DIR}/node_modules/@backstage/cli/bin/backstage-cli"}),".\nReplace ",(0,o.jsx)(n.code,{children:"{PROJECT_DIR}"})," with the path to your Backstage repo."]}),"\n",(0,o.jsxs)(n.li,{children:["In ",(0,o.jsx)(n.code,{children:"Application parameters"}),", input ",(0,o.jsx)(n.code,{children:"package start"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Optionally, for ",(0,o.jsx)(n.code,{children:"Environment Variables"}),", input ",(0,o.jsx)(n.code,{children:"LOG_LEVEL=debug"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Click ",(0,o.jsx)(n.code,{children:"Apply"})," to save the changes."]}),"\n",(0,o.jsxs)(n.li,{children:["With the newly-created configuration selected, use the ",(0,o.jsx)(n.code,{children:"Run"})," or ",(0,o.jsx)(n.code,{children:"Debug"})," icons on the\ntoolbar to execute the newly created configuration."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},221020:(e,n,t)=>{var o=t(296540),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,c=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,r={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var o,s={},l=null,g=null;for(o in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(g=n.ref),n)a.call(n,o)&&!r.hasOwnProperty(o)&&(s[o]=n[o]);if(e&&e.defaultProps)for(o in n=e.defaultProps)void 0===s[o]&&(s[o]=n[o]);return{$$typeof:i,type:e,key:l,ref:g,props:s,_owner:c.current}}n.Fragment=s,n.jsx=l,n.jsxs=l},474848:(e,n,t)=>{e.exports=t(221020)},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(296540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);