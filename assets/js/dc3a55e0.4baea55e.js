/*! For license information please see dc3a55e0.4baea55e.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[218097],{610922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=n(474848),a=n(28453);const i={id:"v1.37.0",title:"v1.37.0",description:"Backstage Release v1.37.0"},o=void 0,r={id:"releases/v1.37.0",title:"v1.37.0",description:"Backstage Release v1.37.0",source:"@site/versioned_docs/version-stable/releases/v1.37.0.md",sourceDirName:"releases",slug:"/releases/v1.37.0",permalink:"/docs/releases/v1.37.0",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/releases/v1.37.0.md",tags:[],version:"stable",frontMatter:{id:"v1.37.0",title:"v1.37.0",description:"Backstage Release v1.37.0"},sidebar:"releases",previous:{title:"v1.38.0",permalink:"/docs/releases/v1.38.0"},next:{title:"v1.36.0",permalink:"/docs/releases/v1.36.0"}},c={},l=[{value:"Highlights",id:"highlights",level:2},{value:"BREAKING: Removals of Old Backend System support",id:"breaking-removals-of-old-backend-system-support",level:3},{value:"BREAKING: Better Frontend Discovery",id:"breaking-better-frontend-discovery",level:3},{value:"BREAKING: Linting Warnings",id:"breaking-linting-warnings",level:3},{value:"BREAKING: Test Utilities",id:"breaking-test-utilities",level:3},{value:"Native Zod Schemas for <code>createTemplateAction</code>",id:"native-zod-schemas-for-createtemplateaction",level:3},{value:"New Frontend System improvements",id:"new-frontend-system-improvements",level:3},{value:"Version Bump of TypeScript",id:"version-bump-of-typescript",level:3},{value:"Delete \u201cProvider Orphaned\u201d Entities",id:"delete-provider-orphaned-entities",level:3},{value:"Security Fixes",id:"security-fixes",level:2},{value:"Upgrade path",id:"upgrade-path",level:2},{value:"Links and References",id:"links-and-references",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["These are the release notes for the v1.37.0 release of ",(0,s.jsx)(t.a,{href:"https://backstage.io/",children:"Backstage"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"A huge thanks to the whole team of maintainers and contributors as well as the amazing Backstage Community for the hard work in getting this release developed and done."}),"\n",(0,s.jsx)(t.h2,{id:"highlights",children:"Highlights"}),"\n",(0,s.jsx)(t.h3,{id:"breaking-removals-of-old-backend-system-support",children:"BREAKING: Removals of Old Backend System support"}),"\n",(0,s.jsxs)(t.p,{children:["We are gradually removing support for the old backend system from plugins and modules. In this release, the most significant such changes are the ",(0,s.jsx)(t.code,{children:"app"}),", ",(0,s.jsx)(t.code,{children:"events"}),", ",(0,s.jsx)(t.code,{children:"proxy"}),", ",(0,s.jsx)(t.code,{children:"search"}),", ",(0,s.jsx)(t.code,{children:"techdocs"}),", and ",(0,s.jsx)(t.code,{children:"user-settings"})," plugins and their modules. It also affects parts of the permissions framework."]}),"\n",(0,s.jsxs)(t.p,{children:["If you have already ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/backend-system/building-backends/migrating",children:"migrated to the new backend system"}),", you will not be required to do any code changes, except perhaps removing the ",(0,s.jsx)(t.code,{children:"/alpha"})," suffix on your imports if you had that."]}),"\n",(0,s.jsx)(t.p,{children:"If you have not yet migrated, now would be a great time to do so."}),"\n",(0,s.jsxs)(t.p,{children:["Note that for the ",(0,s.jsx)(t.code,{children:"@backstage/plugin-search-backend"})," and ",(0,s.jsx)(t.code,{children:"@backstage/plugin-techdocs-backend"})," packages, this necessitated a major semantic version bump. The others are on version 0.x still and received a minor level bump. If you are using ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/getting-started/keeping-backstage-updated#managing-package-versions-with-the-backstage-yarn-plugin",children:"the Backstage yarn plugin"}),", you will get on the new versions automatically. If you do not, you may want to bump your dependency ranges (to e.g. ",(0,s.jsx)(t.code,{children:"^2.0.0"})," for the major bumps) for these to ensure that you keep getting the most recent updates."]}),"\n",(0,s.jsxs)(t.p,{children:["Along with the major bump, most of the previously already deprecated exports were finally removed as well from these packages. There are a bit too many to list here, but as an example, some of the old deprecated exports from the Techdocs backend have been available from their new home in ",(0,s.jsx)(t.code,{children:"@backstage/plugin-techdocs-node"})," instead."]}),"\n",(0,s.jsxs)(t.p,{children:["An upshot of these changes is that we have nearly entirely eliminated the usage of the old ",(0,s.jsx)(t.code,{children:"@backstage/backend-common"})," package. We hope to get rid of the very final remnants of it as soon as possible."]}),"\n",(0,s.jsx)(t.h3,{id:"breaking-better-frontend-discovery",children:"BREAKING: Better Frontend Discovery"}),"\n",(0,s.jsxs)(t.p,{children:["By default, your frontend will be using a more featureful discovery API implementation. The old one basically always pointed at your backend base URL. The new one lets you add a ",(0,s.jsx)(t.code,{children:"discovery.endpoints"})," configuration section where you can easily point individual plugins to their own targets, simplifying the routing of split backend deployments without having to resort to implementing your own discovery. As the ",(0,s.jsx)(t.code,{children:"discovery.endpoints"})," was already in use by the backend discovery service, this is marked as a breaking change, because it might cause any existing ",(0,s.jsx)(t.code,{children:"discovery.endpoints"})," configuration to be picked up and used by the frontend discovery, which may break existing setups."]}),"\n",(0,s.jsx)(t.p,{children:"For example, consider the following configuration:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"app:\n  baseUrl: https://backstage.acme.org\n\nbackend:\n  baseUrl: https://backstage.internal.acme.org\n\ndiscovery:\n  endpoints:\n    - target: https://catalog.internal.acme.org/api/{{pluginId}}\n      plugins: [catalog]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will now cause requests from the frontend towards the catalog plugin to be routed to ",(0,s.jsx)(t.code,{children:"https://catalog.internal.acme.org/api/catalog"}),", but this might not be reachable from the frontend. To fix this, you should update the ",(0,s.jsx)(t.code,{children:"discovery.endpoints"})," configuration to only override the internal URL of the plugin:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"discovery:\n  endpoints:\n    - target:\n        internal: https://catalog.internal.acme.org/api/{{pluginId}}\n      plugins: [catalog]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"breaking-linting-warnings",children:"BREAKING: Linting Warnings"}),"\n",(0,s.jsxs)(t.p,{children:["Our builtin CLI ",(0,s.jsx)(t.code,{children:"lint"})," commands used to be unforgiving of warnings by default. This has now been relaxed, such that it instead behaves like ",(0,s.jsx)(t.code,{children:"eslint"})," itself does: warnings are just warnings and do not trigger a failure. To restore the previous behavior, include the ",(0,s.jsx)(t.code,{children:"--max-warnings 0"})," flag in your ",(0,s.jsx)(t.code,{children:"backstage-cli <repo|package> lint"})," commands."]}),"\n",(0,s.jsxs)(t.p,{children:["Contributed by ",(0,s.jsx)(t.a,{href:"https://github.com/schultzp2020",children:"@schultzp2020"})," in ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/28699",children:"#28699"})]}),"\n",(0,s.jsx)(t.h3,{id:"breaking-test-utilities",children:"BREAKING: Test Utilities"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"@backstage/backend-test-utils"})," database utilities now also cover Postgres major versions up to 17. If you were using the ",(0,s.jsx)(t.code,{children:"TestDatabases"})," class without specifying what exact versions to test against, your tests will start covering Postgres 17 as well."]}),"\n",(0,s.jsxs)(t.p,{children:["The deprecated ",(0,s.jsx)(t.code,{children:"setupRequestMockHandlers"})," was also finally removed, please use ",(0,s.jsx)(t.code,{children:"registerMswTestHooks"})," instead."]}),"\n",(0,s.jsxs)(t.h3,{id:"native-zod-schemas-for-createtemplateaction",children:["Native Zod Schemas for ",(0,s.jsx)(t.code,{children:"createTemplateAction"})]}),"\n",(0,s.jsxs)(t.p,{children:["We\u2019ve revisited how to create Template Actions using the new ",(0,s.jsx)(t.code,{children:"createTemplateAction"})," method. The new way has first class support for ",(0,s.jsx)(t.code,{children:"zod"})," schemas, so you no longer need to think about ",(0,s.jsx)(t.code,{children:"zodToJsonSchema"}),", or manually creating the JSON schema and the type parameters for typing the inputs and outputs for the actions."]}),"\n",(0,s.jsxs)(t.p,{children:["The new API also drops support for ",(0,s.jsx)(t.code,{children:"ctx.logStream"})," as this has been deprecated and will be removed in future versions."]}),"\n",(0,s.jsx)(t.p,{children:"Example usage:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"createTemplateAction({\n  id: 'test',\n  schema: {\n    input: {\n      repoUrl: z => z.string(),\n    },\n    output: {\n      test: z => z.string(),\n    },\n  },\n  handler: async ctx => {\n    // you can just use ctx.logger.log('...'), or if\n    // you really need a log stream you can do this:\n    const logStream = new PassThrough();\n    logStream.on('data', chunk => {\n      ctx.logger.info(chunk.toString());\n    });\n  },\n});\n"})}),"\n",(0,s.jsxs)(t.p,{children:["There\u2019s also some more information in the ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/a90075af6605d452abce6561989a88784da9a942/.changeset/dull-olives-itch.md",children:"changeset"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"new-frontend-system-improvements",children:"New Frontend System improvements"}),"\n",(0,s.jsxs)(t.p,{children:["There\u2019s now ",(0,s.jsxs)(t.a,{href:"https://backstage.io/docs/reference/frontend-plugin-api.dialogapi/",children:["a ",(0,s.jsx)(t.code,{children:"DialogApi"})]}),", which greatly helps with placing dialogs in front of your users - in particular from code that lives outside the React tree, such as in callbacks."]}),"\n",(0,s.jsxs)(t.p,{children:["At the same time, an ",(0,s.jsx)(t.code,{children:"EntityHeaderBlueprint"})," lets you specifically replace the entity page headers. You can now also group multiple entity page contents into a single tab. A tab that groups more than one entity content is rendered as a dropdown menu. You can use the default list of tab groups or create your own. Groups are sorted in the same order as they are defined in the ",(0,s.jsx)(t.code,{children:"app-config.yaml"})," file. The association between an entity content and a tab group can be optionally done when creating the content extension or via the ",(0,s.jsx)(t.code,{children:"app-config.yaml"})," file. See usage examples in the ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/28701",children:"#28701"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/29043",children:"#29043"})," pull requests."]}),"\n",(0,s.jsxs)(t.p,{children:["Another entity page feature introduced in this release is custom entity overview content layouts. It is now possible to have multiple overview content layouts. The layouts will be selected based on an entity filter defined when creating the layout extension or later via ",(0,s.jsx)(t.code,{children:"app-config-file."})," This change also allowed us to improve the default entity overview content layout. It now has 3 different types of areas that you can optionally assign to overview cards and have them rendered as a summary, information, or content card. Check out the following pull requests for more information: ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/28758",children:"#28758"}),",",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/28950",children:"#28950"}),", ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/28928",children:"#28928"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/29145",children:"#29145"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The concept of an ",(0,s.jsx)(t.code,{children:"extensionFactoryMiddleware"})," was also added, which lets you add behaviors globally around any extension factory. This is useful for injecting debugging, analytics and much more. Contributed by ",(0,s.jsx)(t.a,{href:"https://github.com/iamEAP",children:"@iamEAP"})," in ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/29068",children:"#29068"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Another exciting development is that the catalog gradually is adopting a new query format. For now it\u2019s only used in the new frontend system for specifying the conditions under which e.g. a card should appear on the entity page. Eventually, it may be extended to the server side of the catalog as well to allow for more expressive queries. Check out the ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/features/software-catalog/catalog-customization#entity-predicate-queries",children:"entity predicates documentation"})," if you are curious!"]}),"\n",(0,s.jsxs)(t.p,{children:["A bit of a lower level (but technically breaking) change is that the return type of ",(0,s.jsx)(t.code,{children:"createSpecializedApp"})," was changed to allow for better iteration on it in the future. You are unlikely to have been using this internal function, but if you did, more information is ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/29125",children:"in the PR"}),". The opaque old ",(0,s.jsx)(t.code,{children:"ExtensionOverrides"})," and ",(0,s.jsx)(t.code,{children:"BackstagePlugin"})," types were removed as well. This should not have an effect on end users, unless you are using a mixture of a new frontend framework and rather old plugins - if you see this causing any issues, please try updating the plugins as well."]}),"\n",(0,s.jsx)(t.h3,{id:"version-bump-of-typescript",children:"Version Bump of TypeScript"}),"\n",(0,s.jsx)(t.p,{children:"In accordance with our versioning policy, new Backstage installations will now be based on TypeScript version 5.8, while our internal development moves up to version 5.6."}),"\n",(0,s.jsx)(t.p,{children:"We recommend that you upgrade the TypeScript version in your own repositories to at least version 5.6 so that you are guaranteed to be up to date with the features used by libraries that we publish."}),"\n",(0,s.jsx)(t.h3,{id:"delete-provider-orphaned-entities",children:"Delete \u201cProvider Orphaned\u201d Entities"}),"\n",(0,s.jsxs)(t.p,{children:["It used to be that if you removed an entity provider, the entities it had put in the catalog remained and needed manual cleanup. There\u2019s now a new ",(0,s.jsx)(t.code,{children:"catalog.orphanProviderStrategy"})," configuration parameter that lets you opt in to having these be automatically deleted instead. Contributed by ",(0,s.jsx)(t.a,{href:"https://github.com/UsainBloot",children:"@UsainBloot"})," in ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/pull/28971",children:"#28971"})]}),"\n",(0,s.jsx)(t.h2,{id:"security-fixes",children:"Security Fixes"}),"\n",(0,s.jsx)(t.p,{children:"This release does not contain any security fixes."}),"\n",(0,s.jsx)(t.h2,{id:"upgrade-path",children:"Upgrade path"}),"\n",(0,s.jsxs)(t.p,{children:["We recommend that you keep your Backstage project up to date with this latest release. For more guidance on how to upgrade, check out the documentation for ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/getting-started/keeping-backstage-updated",children:"keeping Backstage updated"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"links-and-references",children:"Links and References"}),"\n",(0,s.jsx)(t.p,{children:"Below you can find a list of links and references to help you learn about and start using this new release."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://backstage.io/",children:"Backstage official website"}),", ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/",children:"documentation"}),", and ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/getting-started/",children:"getting started guide"})]}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage",children:"GitHub repository"})}),"\n",(0,s.jsxs)(t.li,{children:["Backstage's ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/overview/versioning-policy",children:"versioning and support policy"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://discord.gg/backstage-687207715902193673",children:"Community Discord"})," for discussions and support"]}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/tree/master/docs/releases/v1.37.0-changelog.md",children:"Changelog"})}),"\n",(0,s.jsxs)(t.li,{children:["Backstage ",(0,s.jsx)(t.a,{href:"https://backstage.io/demos",children:"Demos"}),", ",(0,s.jsx)(t.a,{href:"https://backstage.io/blog",children:"Blog"}),", ",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/overview/roadmap",children:"Roadmap"})," and ",(0,s.jsx)(t.a,{href:"https://backstage.io/plugins",children:"Plugins"})]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Sign up for our ",(0,s.jsx)(t.a,{href:"https://info.backstage.spotify.com/newsletter_subscribe",children:"newsletter"})," if you want to be informed about what is happening in the world of Backstage."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},221020:(e,t,n)=>{var s=n(296540),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,r=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var s,i={},l=null,d=null;for(s in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(d=t.ref),t)o.call(t,s)&&!c.hasOwnProperty(s)&&(i[s]=t[s]);if(e&&e.defaultProps)for(s in t=e.defaultProps)void 0===i[s]&&(i[s]=t[s]);return{$$typeof:a,type:e,key:l,ref:d,props:i,_owner:r.current}}t.Fragment=i,t.jsx=l,t.jsxs=l},474848:(e,t,n)=>{e.exports=n(221020)},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(296540);const a={},i=s.createContext(a);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);